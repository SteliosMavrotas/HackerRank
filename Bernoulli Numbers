from fractions import Fraction
import sys
from decimal import Decimal
def bernoulli_number(n):
    sys.setrecursionlimit(10000) 
    pasc=[[1],[1,1],[1,2,1]]
    brn=[1,-1/2]
    
    if n==0 or n==1:
        return brn[n]
    a=calculateBernouli(n,pasc,brn)[-1]
    print(a)
    return Fraction.from_decimal(a).limit_denominator()

def calculateBernouli(n,pasc,brn):
    
    pasc.append([1]+[v+pasc[-1][c] for c,v in enumerate(pasc[-1][1:])]+[1])
    
    if len(pasc)==n+3:
        return brn
    
    brn.append(sum([-1]+[Decimal(-v*brn[c+1]) for c,v in enumerate(pasc[-1][1:len(pasc[-1])-2])])/pasc[-1][-2])
    return calculateBernouli(n, pasc, brn)
